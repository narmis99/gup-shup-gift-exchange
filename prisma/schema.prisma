generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                        Int         @id @default(autoincrement())
  username                  String      @unique
  passkeyHash               String
  birthdate                 DateTime    @db.Timestamp(6)
  sessions                  Session[]
  wishes                    Wish[]
  messages                  Message[]
  isAdmin                   Boolean     @default(false)

  exchangesWhereSanta       Exchange[]  @relation("santaExchangeId")
  exchangesWhereRecipient   Exchange[]  @relation("recipientExchangeId")
  santaChat                 Chat?       @relation("santaChatId")
  recipientChat             Chat?       @relation("recipientChatId")
}

model Session {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  createdAt DateTime @default(now())
  userId    Int

  user      User     @relation(fields: [userId], references: [id])
}

model Wish {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  createdAt   DateTime   @default(now())
  url         String
  rating      Int
  comment     String
  userId      Int

  user        User       @relation(fields: [userId], references: [id])
}

model Exchange {
  id            Int      @id @default(autoincrement())
  year          Int
  present       String
  santaId       Int
  recipientId   Int

  santaUser     User     @relation(name:"santaExchangeId", fields: [santaId], references: [id])
  recipientUser User     @relation(name:"recipientExchangeId", fields: [recipientId], references: [id])
}

model Chat {
  id            Int       @id @default(autoincrement())
  santaId       Int       @unique
  recipientId   Int       @unique
  messages      Message[]

  santaUser     User     @relation(name:"santaChatId", fields: [santaId], references: [id])
  recipientUser User     @relation(name:"recipientChatId", fields: [recipientId], references: [id])
}

model Message {
  id          Int       @id @default(autoincrement())
  chatId      Int
  senderId    Int
  content     String
  timestamp   DateTime  @default(now())

  chat        Chat      @relation(fields: [chatId], references: [id], onDelete: Cascade)
  sender      User      @relation(fields: [senderId], references: [id])
}
